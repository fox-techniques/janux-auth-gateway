{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"JANUX Authentication Gateway","text":"<p>JANUX Authentication Gateway is a high-performance, modular, and extensible authentication microservice built with FastAPI. It provides secure user and admin authentication, JWT management, and seamless MongoDB integration via Beanie ODM and PostgreSQL via SQLAlchemy. Designed for developers and organizations, JANUX ensures scalability, flexibility, and security\u2014making it ideal for SaaS platforms, APIs, and enterprise applications that require a robust authentication system.</p>"},{"location":"#key-features","title":"\ud83c\udf1f Key Features","text":"<ul> <li>\ud83d\ude80 FastAPI-based \u2013 Asynchronous, high-performance authentication.</li> <li>\ud83d\udd11 JWT Authentication &amp; Token Management \u2013 Secure access and refresh tokens.</li> <li>\ud83c\udff7\ufe0f Role-Based Access Control (RBAC) \u2013 Admins, users, and fine-grained permissions.</li> <li>\ud83d\udc18 PostgreSQL via SQLAlchemy \u2013 User and admin management with PostgreSQL. </li> <li>\ud83d\uddc4\ufe0f MongoDB with Beanie ODM \u2013 Flexible user and admin management.</li> <li>\ud83d\udd10 Secure Password Hashing \u2013 Uses Argon2 &amp; Bcrypt for industry-leading security.</li> <li>\ud83d\udcdc Cryptographic Key Support \u2013 RSA, Ed25519, and ECDSA for secure key management.</li> <li>\ud83d\udd04 Redis-Based Token Blacklisting \u2013 Prevents reuse of revoked tokens.</li> <li>\ud83c\udf0d CORS Middleware \u2013 Configurable allowed origins for API security.</li> <li>\ud83c\udfd7\ufe0f Modular &amp; Extensible \u2013 Easily customizable for different authentication workflows.</li> <li>\ud83d\udce6 Deploy Anywhere \u2013 Works in Docker, Kubernetes, and serverless environments.</li> </ul>"},{"location":"#why-choose-janux","title":"\ud83d\udccc Why Choose JANUX?","text":"<p>JANUX is developer-friendly, scalable, and production-ready. It eliminates the complexity of authentication by providing a plug-and-play solution for handling users, roles, security, and authentication tokens\u2014so you can focus on building your core application.</p>"},{"location":"#use-janux-if-you-need","title":"\ud83d\udca1 Use JANUX if you need:","text":"<ul> <li>\u2705 A ready-to-use authentication system for APIs and SaaS apps.</li> <li>\u2705 A secure and scalable solution with RBAC &amp; JWT.</li> <li>\u2705 Flexibility to extend authentication workflows.</li> <li>\u2705 Modern authentication standards with FastAPI, PostgresSQL, MongoDB, and Redis.</li> </ul>"},{"location":"#quick-links","title":"\ud83d\udd17 Quick Links","text":"<ul> <li>PyPI</li> <li>GitHub Repository</li> <li>License</li> </ul> <p>Explore the documentation to learn how to customize and make the most of JANUX Authentiocation Gateway for your project!</p>"},{"location":"CODE_OF_CONDUCT/","title":"\ud83c\udfdb\ufe0f Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"\ud83d\udcdc Our Pledge","text":"<p>We, as community members, contributors, and leaders, pledge to create an inclusive, welcoming, and harassment-free experience for everyone, regardless of:</p> <ul> <li>Age, appearance, body size, or visible/invisible disabilities</li> <li>Ethnicity, race, nationality, or socio-economic status</li> <li>Gender identity, sexual orientation, or personal beliefs</li> <li>Level of experience, education, or background</li> </ul> <p>We commit to fostering an open and respectful environment where everyone feels safe, valued, and empowered to contribute.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"\ud83d\udc8e Our Standards","text":"<p>Examples of positive behavior:</p> <p>\u2705 Showing empathy, kindness, and respect toward others</p> <p>\u2705 Welcoming new contributors and guiding them patiently</p> <p>\u2705 Accepting constructive feedback with grace and professionalism</p> <p>\u2705 Taking responsibility for mistakes and learning from them</p> <p>\u2705 Prioritizing what\u2019s best for the community as a whole, not just individuals</p> <p>Examples of unacceptable behavior:</p> <p>\ud83d\udeab Using sexualized language, imagery, or unwanted attention</p> <p>\ud83d\udeab Trolling, personal attacks, or inflammatory comments</p> <p>\ud83d\udeab Harassment (public or private), intimidation, or bullying</p> <p>\ud83d\udeab Publishing private information (emails, addresses, etc.) without consent</p> <p>\ud83d\udeab Sustained disruption of discussions, projects, or community events</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"\u2696\ufe0f Enforcement Responsibilities","text":"<p>Community leaders\u2014including maintainers, moderators, and core contributors\u2014are responsible for enforcing this Code of Conduct by:</p> <ul> <li>Reviewing all reported incidents in a fair and confidential manner</li> <li>Removing, editing, or rejecting comments, commits, issues, and contributions that violate these standards</li> <li>Communicating moderation decisions clearly and professionally</li> </ul> <p>Failure to comply with these guidelines may result in warnings, temporary bans, or permanent removal from the community.</p>"},{"location":"CODE_OF_CONDUCT/#reporting-violations","title":"\ud83d\udea8 Reporting Violations","text":"<p>If you witness or experience unacceptable behavior, please report it immediately. We take violations seriously and will respond within 3 business days.</p> <p>\ud83d\udce8 Report via email: conduct@fox-techniques.com</p> <p>\ud83d\udd12 All reports are kept confidential.</p> <p>When reporting, please include:</p> <ul> <li>A detailed description of the incident (including dates &amp; locations)</li> <li>Any supporting evidence (screenshots, links, messages)</li> <li>Your preferred outcome (if applicable)</li> </ul> <p>If you're unsure whether something is a violation, ask us! We're here to help.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"\ud83d\udccc Enforcement Guidelines","text":"<p>Community leaders will follow these guidelines to determine appropriate consequences for violations:</p> <p>\u278a \u26a0\ufe0f Warning</p> <ul> <li>Impact: Minor infraction (e.g., inappropriate language or unintentional offense)</li> <li>Action: Private warning with an explanation of the violation. A public apology may be requested.</li> </ul> <p>\u278b \ud83d\udeab Temporary Ban</p> <ul> <li>Impact: Repeated infractions, harassment, or intentional disruption</li> <li>Action: Temporary ban from community spaces, discussions, and direct interactions.</li> </ul> <p>\u278c \u274c Permanent Ban</p> <ul> <li>Impact: Serious violations, including threats, doxxing, or extreme harassment</li> <li>Action: Permanent removal from all community platforms.</li> </ul> <p>\ud83d\ude80 Appeals: If you believe an enforcement action was taken unfairly, you may appeal by emailing conduct@fox-techniques.com.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"\ud83c\udf0e Scope","text":"<p>This Code of Conduct applies everywhere, including:</p> <ul> <li>GitHub repositories (issues, discussions, PRs)</li> <li>Community chat channels (Discord, Slack, forums)</li> <li>Conferences, meetups, and official events</li> <li>Social media accounts affiliated with this project</li> </ul> <p>Maintainers reserve the right to act on violations even if they occur outside these spaces, if they impact the safety and inclusivity of the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"\ud83d\udcdc Attribution","text":"<p>This Code of Conduct is adapted from:</p> <ul> <li>Contributor Covenant v2.0</li> <li>Mozilla\u2019s Code of Conduct Enforcement Ladder</li> </ul> <p>\u2049\ufe0f For FAQs and translations, visit: Contributor Covenant FAQ</p>"},{"location":"CONTRIBUTING/","title":"\u2728 Contributing Guidelines","text":"<p>We welcome all contributions, including pull requests, bug reports, and discussions. Thank you for helping improve JANUX Authentication Gateway!</p>"},{"location":"CONTRIBUTING/#code-of-conduct","title":"\ud83d\udcdc Code of Conduct","text":"<p>Please review our Code of Conduct. All contributors are expected to follow it. Any inappropriate behavior or violations will not be tolerated.  </p>"},{"location":"CONTRIBUTING/#how-to-get-help","title":"\u2753 How to Get Help","text":"<p>See our Support Guide. Do not use GitHub issues for general questions\u2014ask on Stack Overflow instead.  </p>"},{"location":"CONTRIBUTING/#bug-reports-issues","title":"\ud83d\udc1e Bug Reports &amp; Issues","text":""},{"location":"CONTRIBUTING/#do","title":"\ud83c\udfc1 DO","text":"<p>\u2705 Check the documentation &amp; Support Guide before opening an issue.  </p> <p>\u2705 Search existing issues to avoid duplicates.  </p> <p>\u2705 Provide clear details\u2014steps to reproduce, error logs, expected vs. actual behavior.  </p> <p>\u2705 Use Markdown formatting (wrap code in triple backticks <code>```</code>).  </p>"},{"location":"CONTRIBUTING/#dont","title":"\u26d4 DON'T","text":"<p>\u274c Open duplicate issues.</p> <p>\u274c Comment \"+1\"\u2014use GitHub reactions instead.  </p>"},{"location":"CONTRIBUTING/#feature-requests","title":"\ud83d\udca1 Feature Requests","text":"<ul> <li>Clearly describe the problem your feature solves.  </li> <li>Explain why it's useful for others.  </li> <li>If possible, outline a potential implementation.  </li> <li>Avoid feature creep\u2014we prioritize core functionality.  </li> </ul>"},{"location":"CONTRIBUTING/#submitting-pull-requests","title":"\ud83d\ude80 Submitting Pull Requests","text":"<p>Before submitting a PR:  </p> <p>\u2714 Open an issue first (for large changes).  </p> <p>\u2714 Keep PRs small\u2014one bug fix or feature per PR.  </p> <p>\u2714 Follow existing coding styles.  </p> <p>\u2714 Include tests and update documentation if necessary.  </p> <p>\u2714 Ensure CI checks pass before requesting review.  </p>"},{"location":"CONTRIBUTING/#pr-workflow","title":"\ud83d\udd04 PR Workflow","text":"Step Action Required \ud83d\udcdd Open Issue Discuss the problem/feature first. \ud83c\udfd7\ufe0f Fork &amp; Code Follow project structure, add tests. \ud83d\udcd1 Create PR Provide a clear description. \ud83d\udd0d Code Review Address comments &amp; improve PR. \u2705 Merge &amp; Release After approval, maintainers merge it."},{"location":"CONTRIBUTING/#writing-commit-messages","title":"\ud83d\udcdd Writing Commit Messages","text":"<p>Follow these commit message rules: </p> <p>\u2714 Use the imperative mood \u2192 (\"Fix crash\", not \"Fixed crash\"). \u2714 Keep subject under 50 chars, and wrap body at 72 chars. \u2714 Explain why the change is needed, not just what it does. \u2714 Prefix relevant component \u2192 (e.g., <code>[docs]</code>, <code>[auth]</code>, <code>[router]</code>).  </p> <p>Example: <pre><code>[auth] Fix JWT token expiration issue\n\nUpdated the expiration logic to ensure tokens expire after 15 minutes.\nFixed bug where revoked tokens could still be used.\nResolves: #123\n</code></pre></p>"},{"location":"CONTRIBUTING/#certificate-of-origin","title":"\ud83c\udfc5 Certificate of Origin","text":"<p>Developer's Certificate of Origin 1.1</p> <p>By making a contribution to this project, I certify that:</p> <ol> <li>The contribution was created in whole or in part by me and I have the right to submit it under the open-source license indicated in the file; or</li> <li>The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open-source license, and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open-source license (unless I am permitted to submit under a different license), as indicated in the file; or</li> <li>The contribution was provided directly to me by some other person who certified (1), (2), or (3), and I have not modified it.</li> <li>I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistently with this project or the open-source license(s) involved.</li> </ol>"},{"location":"CONTRIBUTING/#summary","title":"\ud83d\udccc Summary","text":"<p>\ud83c\udfaf Report bugs &amp; feature requests properly.</p> <p>\ud83d\ude80 Follow PR &amp; coding guidelines.</p> <p>\u270d Write clear commit messages.</p> <p>\ud83d\udcdc Respect the Code of Conduct.</p> <p>\ud83d\ude4c Thank you for contributing to JANUX Authentication Gateway!</p>"},{"location":"LICENSE/","title":"\ud83d\udcdc License","text":"<p>JANUX Athentication Gateway is licensed under the Apache License Version 2.0, January 2004.</p>"},{"location":"LICENSE/#terms-and-conditions","title":"TERMS AND CONDITIONS","text":"<p>FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li>Definitions.</li> </ol> <p>\"License\" shall mean the terms and conditions for use, reproduction,    and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by    the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all    other entities that control, are controlled by, or are under common    control with that entity. For the purposes of this definition,    \"control\" means (i) the power, direct or indirect, to cause the    direction or management of such entity, whether by contract or    otherwise, or (ii) ownership of fifty percent (50%) or more of the    outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity    exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,    including but not limited to software source code, documentation    source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical    transformation or translation of a Source form, including but    not limited to compiled object code, generated documentation,    and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or    Object form, made available under the License, as indicated by a    copyright notice that is included in or attached to the work    (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object    form, that is based on (or derived from) the Work and for which the    editorial revisions, annotations, elaborations, or other modifications    represent, as a whole, an original work of authorship. For the purposes    of this License, Derivative Works shall not include works that remain    separable from, or merely link (or bind by name) to the interfaces of,    the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including    the original version of the Work and any modifications or additions    to that Work or Derivative Works thereof, that is intentionally    submitted to Licensor for inclusion in the Work by the copyright owner    or by an individual or Legal Entity authorized to submit on behalf of    the copyright owner. For the purposes of this definition, \"submitted\"    means any form of electronic, verbal, or written communication sent    to the Licensor or its representatives, including but not limited to    communication on electronic mailing lists, source code control systems,    and issue tracking systems that are managed by, or on behalf of, the    Licensor for the purpose of discussing and improving the Work, but    excluding communication that is conspicuously marked or otherwise    designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity    on behalf of whom a Contribution has been received by Licensor and    subsequently incorporated within the Work.</p> <ol> <li> <p>Grant of Copyright License. Subject to the terms and conditions of    this License, each Contributor hereby grants to You a perpetual,    worldwide, non-exclusive, no-charge, royalty-free, irrevocable    copyright license to reproduce, prepare Derivative Works of,    publicly display, publicly perform, sublicense, and distribute the    Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of    this License, each Contributor hereby grants to You a perpetual,    worldwide, non-exclusive, no-charge, royalty-free, irrevocable    (except as stated in this section) patent license to make, have made,    use, offer to sell, sell, import, and otherwise transfer the Work,    where such license applies only to those patent claims licensable    by such Contributor that are necessarily infringed by their    Contribution(s) alone or by combination of their Contribution(s)    with the Work to which such Contribution(s) was submitted. If You    institute patent litigation against any entity (including a    cross-claim or counterclaim in a lawsuit) alleging that the Work    or a Contribution incorporated within the Work constitutes direct    or contributory patent infringement, then any patent licenses    granted to You under this License for that Work shall terminate    as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the    Work or Derivative Works thereof in any medium, with or without    modifications, and in Source or Object form, provided that You    meet the following conditions:</p> </li> </ol> <p>(a) You must give any other recipients of the Work or          Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices          stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works          that You distribute, all copyright, patent, trademark, and          attribution notices from the Source form of the Work,          excluding those notices that do not pertain to any part of          the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its          distribution, then any Derivative Works that You distribute must          include a readable copy of the attribution notices contained          within such NOTICE file, excluding those notices that do not          pertain to any part of the Derivative Works, in at least one          of the following places: within a NOTICE text file distributed          as part of the Derivative Works; within the Source form or          documentation, if provided along with the Derivative Works; or,          within a display generated by the Derivative Works, if and          wherever such third-party notices normally appear. The contents          of the NOTICE file are for informational purposes only and          do not modify the License. You may add Your own attribution          notices within Derivative Works that You distribute, alongside          or as an addendum to the NOTICE text from the Work, provided          that such additional attribution notices cannot be construed          as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and    may provide additional or different license terms and conditions    for use, reproduction, or distribution of Your modifications, or    for any such Derivative Works as a whole, provided Your use,    reproduction, and distribution of the Work otherwise complies with    the conditions stated in this License.</p> <ol> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,    any Contribution intentionally submitted for inclusion in the Work    by You to the Licensor shall be under the terms and conditions of    this License, without any additional terms or conditions.    Notwithstanding the above, nothing herein shall supersede or modify    the terms of any separate license agreement you may have executed    with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade    names, trademarks, service marks, or product names of the Licensor,    except as required for reasonable and customary use in describing the    origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or    agreed to in writing, Licensor provides the Work (and each    Contributor provides its Contributions) on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or    implied, including, without limitation, any warranties or conditions    of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A    PARTICULAR PURPOSE. You are solely responsible for determining the    appropriateness of using or redistributing the Work and assume any    risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,    whether in tort (including negligence), contract, or otherwise,    unless required by applicable law (such as deliberate and grossly    negligent acts) or agreed to in writing, shall any Contributor be    liable to You for damages, including any direct, indirect, special,    incidental, or consequential damages of any character arising as a    result of this License or out of the use or inability to use the    Work (including but not limited to damages for loss of goodwill,    work stoppage, computer failure or malfunction, or any and all    other commercial damages or losses), even if such Contributor    has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing    the Work or Derivative Works thereof, You may choose to offer,    and charge a fee for, acceptance of support, warranty, indemnity,    or other liability obligations and/or rights consistent with this    License. However, in accepting such obligations, You may act only    on Your own behalf and on Your sole responsibility, not on behalf    of any other Contributor, and only if You agree to indemnify,    defend, and hold each Contributor harmless for any liability    incurred by, or claims asserted against, such Contributor by reason    of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"LICENSE/#appendix-how-to-apply-the-apache-license-to-your-work","title":"APPENDIX: How to apply the Apache License to your work.","text":"<p>To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.</p> <p>Copyright [2025] [FOX Techniques]</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <p>http://www.apache.org/licenses/LICENSE-2.0</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"SECURITY/","title":"\ud83d\udd12 Security Policies","text":""},{"location":"SECURITY/#supported-versions","title":"\u2705 Supported Versions","text":"<p>We provide updates and security patches for the following versions:</p> Version Supported 2.x.x  Actively Maintained 1.1.x 1.0.x"},{"location":"SECURITY/#reporting-a-security-vulnerability","title":"\ud83d\udee1\ufe0f Reporting a Security Vulnerability","text":"<p>If you discover a security issue, please report it privately to us as soon as possible.</p> <p>\ud83d\udea8 DO NOT open a public GitHub issue for security vulnerabilities. Instead, follow these steps:</p> <p>\u278a \ud83d\udce9 Send an email to security@fox-techniques.com Include as many details as possible (e.g., steps to reproduce, potential impact).</p> <p>\u278b \u23f3 We aim to respond within 3 business days. We\u2019ll acknowledge receipt, assess the issue, and provide updates.</p> <p>\u278c \ud83d\udee0\ufe0f We will work on a fix ASAP and coordinate disclosure. We follow responsible disclosure practices to ensure affected parties are notified properly.</p> <p>Thank you for helping keep JANUX Authentication Gateway secure! \ud83d\ude4c</p>"},{"location":"SUPPORT/","title":"\ud83d\udce3 Support and Help","text":"<p>Need help getting started or using the project? Here's how.</p>"},{"location":"SUPPORT/#how-to-get-help","title":"\ud83d\ude91 How to Get Help","text":"<p>For general usage questions that are not specific to the project itself, please search for answers on Stack Overflow. This is the best way to get help quickly and allows others to benefit from shared knowledge.</p> <p>We recommend seeking support in the following ways:</p> <p>\u278a \ud83d\udcd6 Read the Documentation &amp; Guides. Before asking for help, check the documentation and guides for solutions. Hands-on experience is the best way to learn! We\u2019re rooting for you! \ud83d\udc4f</p> <p>\u278b \ud83d\udd0d Search &amp; Ask on Stack Overflow. If you're troubleshooting an issue or trying to use the project in a specific way, search existing questions or ask new ones on Stack Overflow.</p> <p>\u278c \ud83d\udcac Join Our Discord or Slack Community. We don\u2019t provide direct \u201ccustomer support,\u201d but we are happy to engage in discussions, answer questions, and chat about best practices. We\u2019ll try our best to respond, but please be patient! \ud83d\udc0c</p> <p>\u278d \u270d\ufe0f Open a GitHub Issue (Last Resort!)</p> <p>If you believe you\u2019ve found a bug or need help that only the maintainers can provide, open a GitHub issue. When doing so:</p> <ol> <li>\u2705 Clearly explain your issue and what you're trying to accomplish.</li> <li>\u2705 List what you\u2019ve already tried.</li> <li>\u2705 Provide minimal, reproducible code samples (but do not attach your entire project).</li> </ol>"},{"location":"SUPPORT/#what-not-to-do","title":"\u274c What NOT to Do","text":"<p>When seeking support, please avoid the following:</p> <ol> <li>\ud83d\udeab Do not message contributors on Twitter or other social media.</li> <li>\ud83d\udeab Do not spam issues with +1 comments or duplicate issues.</li> </ol> <p>Public questions get public answers, which benefit everyone in the community. Let\u2019s keep discussions open and helpful! \u270c\ufe0f</p>"},{"location":"api_reference/","title":"\ud83d\udcd6 API Reference","text":"<p>This section documents all available endpoints in JANUX Authentication Gateway, covering authentication, user management, admin operations, and system status.</p>"},{"location":"api_reference/#base-endpoints","title":"\ud83c\udf0d Base Endpoints","text":"<p>Endpoints for general service interaction and health checks.</p>"},{"location":"api_reference/#welcome-message","title":"\ud83c\udfe0 Welcome Message","text":"<p>Returns a welcome message from the authentication service.</p> <ul> <li>Endpoint: <code>GET /</code></li> <li>Response (Success 200): <pre><code>{\n  \"message\": \"Welcome to the JANUX Authentication Gateway!\"\n}\n</code></pre></li> </ul>"},{"location":"api_reference/#health-check","title":"\ud83d\udc9a Health Check","text":"<p>Verify if the service is running and responsive.</p> <ul> <li>Endpoint: <code>GET /health</code></li> <li>Response (Success 200): <pre><code>{\n\"status\": \"healthy\"\n}\n</code></pre></li> </ul>"},{"location":"api_reference/#readiness-probe","title":"\ud83d\udd04 Readiness Probe","text":"<p>Indicates if the application is ready to receive traffic.</p> <ul> <li>Endpoint: <code>GET /readiness</code></li> <li>Response (Success 200): <pre><code>{\n  \"status\": \"ready\"\n}\n</code></pre></li> </ul>"},{"location":"api_reference/#liveness-probe","title":"\ud83d\ude80 Liveness Probe","text":"<p>Checks if the application is alive.</p> <ul> <li>Endpoint: <code>GET /liveness</code></li> <li>Response (Success 200): <pre><code>{\n  \"status\": \"alive\"\n}\n</code></pre></li> </ul>"},{"location":"api_reference/#authentication-endpoints","title":"\ud83d\udd11 Authentication Endpoints","text":"<p>Handles user and admin authentication, JWT token issuance, and logout.</p>"},{"location":"api_reference/#login","title":"\ud83d\udd10 Login","text":"<p>Authenticate a user or admin and receive an access token.</p> <ul> <li>Endpoint: <code>POST /auth/login</code></li> <li>Request Body (Form Data): <pre><code>{\n  \"username\": \"user@example.com\",\n  \"password\": \"SecurePass123!\"\n}\n</code></pre></li> <li>Response (Success 200): <pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR...\",\n  \"token_type\": \"bearer\"\n}\n</code></pre></li> <li>Response (Failure 401 - Unauthorized): <pre><code>{\n  \"detail\": \"Invalid email or password\"\n}\n</code></pre></li> <li>Response (Failure 429 - Too Many Requests): <pre><code>{\n  \"detail\": \"Too many login attempts. Please try again later.\"\n}\n</code></pre></li> </ul>"},{"location":"api_reference/#user-endpoints","title":"\ud83d\udc64 User Endpoints","text":"<p>Endpoints for user registration, profile management, and logout.</p>"},{"location":"api_reference/#register-user","title":"\ud83d\udcdd Register User","text":"<p>Creates a new user account.</p> <ul> <li>Endpoint: <code>POST /users/register</code></li> <li>Request Body (JSON): <pre><code>{\n  \"email\": \"user@example.com\",\n  \"full_name\": \"Jane Doe\",\n  \"password\": \"SecurePassw0rd123!\"\n}\n</code></pre></li> <li>Response (Success 201): <pre><code>{\n  \"id\": \"507f1f77bcf86cd799439011\",\n  \"email\": \"user@example.com\",\n  \"full_name\": \"User Name\"\n}\n</code></pre></li> <li> <p>Response (Failure 409 - Conflict): <pre><code>{\n  \"detail\": \"Email already registered.\"\n}\n</code></pre></p> </li> <li> <p>Response (Failure 429 - Too Many Requests): <pre><code>{\n  \"detail\": \"Too many requests. Please try again later.\"\n}\n</code></pre></p> </li> </ul>"},{"location":"api_reference/#get-current-user-profile","title":"\ud83d\udc40 Get Current User Profile","text":"<p>Retrieve details of the authenticated user.</p> <ul> <li>Endpoint: <code>GET /users/profile</code></li> <li> <p>Headers: <pre><code>Authorization: Bearer YOUR_ACCESS_TOKEN\n</code></pre></p> </li> <li> <p>Response (Success 200): <pre><code>{\n  \"message\": \"This is your profile\",\n  \"user\": {\n    \"email\": \"user@example.com\",\n    \"role\": \"user\"\n  }\n}\n</code></pre></p> </li> <li>Response (Failure 401 - Unauthorized): <pre><code>{\n  \"detail\": \"Could not validate user.\"\n}\n</code></pre></li> </ul>"},{"location":"api_reference/#user-logout","title":"\ud83d\udeaa User Logout","text":"<p>Logs out the currently authenticated user.</p> <ul> <li>Endpoint: <code>POST /users/logout</code></li> <li>Headers: <pre><code>Authorization: Bearer YOUR_ACCESS_TOKEN\n</code></pre></li> <li> <p>Response (Success 200): <pre><code>{\n  \"message\": \"You have been logged out successfully.\"\n}\n</code></pre></p> </li> <li> <p>Response (Failure 401 - Unauthorized): <pre><code>{\n  \"detail\": \"Could not validate user.\"\n}\n</code></pre></p> </li> </ul>"},{"location":"api_reference/#admin-endpoints","title":"\ud83d\udee1\ufe0f Admin Endpoints","text":"<p>Endpoints for admin actions like user management and profile retrieval.</p>"},{"location":"api_reference/#list-all-users","title":"\ud83d\udccb List All Users","text":"<p>Fetches all registered users (Admin Only).</p> <ul> <li>Endpoint: <code>GET /admins/users</code></li> <li>Headers: <pre><code>Authorization: Bearer ADMIN_ACCESS_TOKEN\n</code></pre></li> <li>Response (Success 200): <pre><code>[\n  {\n    \"id\": \"507f1f77bcf86cd799439011\",\n    \"email\": \"user@example.com\",\n    \"full_name\": \"User Name\",\n    \"role\": \"user\"\n  },\n  {\n    \"id\": \"607f1f77bcf86cd799439012\",\n    \"email\": \"admin@example.com\",\n    \"full_name\": \"Admin User\",\n    \"role\": \"admin\"\n  }\n]\n</code></pre></li> <li>Response (Failure 401 - Unauthorized): <pre><code>{\n  \"detail\": \"Not enough permissions.\"\n}\n</code></pre></li> </ul>"},{"location":"api_reference/#delete-user-admin-only","title":"\u274c Delete User (Admin Only)","text":"<p>Deletes a user by ID.</p> <ul> <li>Endpoint: <code>DELETE /admins/users/{user_id}</code></li> <li>Headers: <pre><code>Authorization: Bearer ADMIN_ACCESS_TOKEN\n</code></pre></li> <li>Response (Success 200): <pre><code>{\n  \"message\": \"User ID 507f1f77bcf86cd799439011 successfully deleted.\"\n}\n</code></pre></li> <li>Response (Failure 404 - Not Found): <pre><code>{\n  \"detail\": \"User not found.\"\n}\n</code></pre></li> <li>Response (Failure 401 - Unauthorized): <pre><code>{\n  \"detail\": \"Not enough permissions.\"\n}\n</code></pre></li> </ul>"},{"location":"api_reference/#get-admin-profile","title":"\ud83d\udc64 Get Admin Profile","text":"<p>Retrieve the currently authenticated admin profile.</p> <ul> <li>Endpoint: <code>GET /admins/profile</code></li> <li> <p>Headers: <pre><code>Authorization: Bearer ADMIN_ACCESS_TOKEN\n</code></pre></p> </li> <li> <p>Response (Success 200): <pre><code>{\n  \"message\": \"This is your admin profile\",\n  \"admin\": {\n    \"email\": \"admin@example.com\",\n    \"role\": \"admin\"\n  }\n}\n</code></pre></p> </li> </ul>"},{"location":"api_reference/#admin-logout","title":"\ud83d\udeaa Admin Logout","text":"<p>Logs out the currently authenticated admin.</p> <ul> <li>Endpoint: <code>POST /admins/logout</code></li> <li> <p>Headers: <pre><code>Authorization: Bearer ADMIN_ACCESS_TOKEN\n</code></pre></p> </li> <li> <p>Response (Success 200): <pre><code>{\n  \"message\": \"You have been logged out successfully.\"\n}\n</code></pre></p> </li> <li> <p>Response (Failure 401 - Unauthorized): <pre><code>{\n  \"detail\": \"Not enough permissions.\"\n}\n</code></pre></p> </li> </ul>"},{"location":"api_reference/#api-documentation","title":"\ud83d\udcc2 API Documentation","text":"<p>Access interactive API docs:</p> <ul> <li>Swagger UI</li> <li>Redoc UI</li> </ul>"},{"location":"configuration/","title":"\ud83d\udd27 Configuration","text":"<p>JANUX Authentication Gateway relies on environment variables and Docker secrets to securely store configuration values. Below is a guide on how to configure the service.</p>"},{"location":"configuration/#environment-variables","title":"\ud83c\udf0d Environment Variables","text":"<p>For non-sensitive settings, JANUX loads configuration from a <code>.env</code> file or system environment variables. The following default <code>.env.example</code> file is provided for local development. </p> .env<pre><code># ========================\n# \ud83c\udf0d Environment Settings\n# ========================\nENVIRONMENT=local\nALLOWED_ORIGINS=\"*\"\n\n# ========================\n# \u2699\ufe0f Backend Configuration\n# ========================\n# Supported values: mongo, postgres\nAUTH_DB_BACKEND=mongo\n\n# ========================\n# \ud83d\udd10 Authentication (JWT)\n# ========================\nACCESS_TOKEN_EXPIRE_MINUTES=20\nTOKEN_ISSUER=JANUX-server\nTOKEN_AUDIENCE=JANUX-application\n\n# ========================\n# \ud83d\udccd Token Endpoints\n# ========================\nUSER_TOKEN_URL=/auth/login\nADMIN_TOKEN_URL=/auth/login\n\n# ========================\n# \ud83c\udf31 MongoDB Configuration\n# ========================\nMONGO_DATABASE_NAME=users_db\n\n# ========================\n# \ud83d\udc18 PostgreSQL Configuration\n# ========================\nPOSTGRES_DATABASE_NAME=users_db\nPOSTGRES_ECHO=false\nPOSTGRES_POOL_SIZE=5\n\n# ========================\n# \ud83c\uddf7 REDIS Configuration\n# ========================\nREDIS_HOST=redis\nREDIS_PORT=6379\n\n# ========================\n# \ud83e\udd84 Uvicorn Configuration\n# ========================\nUVICORN_HOST=0.0.0.0\nUVICORN_PORT=8000\n</code></pre> <p>To use this configuration, copy <code>.env.example</code> to <code>.env</code>, and modify the values as needed.</p> <p>Note</p> <p>JANUX accepts <code>.env</code> and <code>.env.local</code> for development. </p> <p>For production or any other containerized enviroments, use <code>.env.&lt;enviroment&gt;</code> e.g. <code>.env.test</code> or <code>.env.production</code>.</p> <p>IMPORTANT</p> <p>Ensure JANUX_ENCRYPTION_KEY is a valid 32-byte base64-encoded string!</p>"},{"location":"configuration/#secure-secrets-with-docker","title":"\ud83d\udd10 Secure Secrets with Docker","text":"<p>For sensitive data, JANUX does NOT store credentials in <code>.env</code> files but instead loads them from Docker secrets. This ensures that sensitive information (e.g., database credentials, encryption keys) is not stored in source code or environment variables.</p> <p>The expected structure for secrets in local development mimics Docker secrets:</p> <pre><code>\ud83d\udcc1 secrets/\n\u251c\u2500\u2500 janux_encryption_key\n\u251c\u2500\u2500 jwt_private_key.pem\n\u251c\u2500\u2500 jwt_public_key.pem\n\n# MongoDB (used if AUTH_DB_BACKEND=mongo)\n\u251c\u2500\u2500 mongo_uri\n\u251c\u2500\u2500 mongo_admin_email\n\u251c\u2500\u2500 mongo_admin_password\n\u251c\u2500\u2500 mongo_admin_fullname\n\u251c\u2500\u2500 mongo_admin_role\n\u251c\u2500\u2500 mongo_user_email\n\u251c\u2500\u2500 mongo_user_password\n\u251c\u2500\u2500 mongo_user_fullname\n\u2514\u2500\u2500 mongo_user_role\n\n# PostgreSQL (used if AUTH_DB_BACKEND=postgres)\n\u251c\u2500\u2500 postgres_uri\n\u251c\u2500\u2500 postgres_admin_username\n\u251c\u2500\u2500 postgres_admin_password\n\u251c\u2500\u2500 postgres_admin_fullname\n\u251c\u2500\u2500 postgres_admin_role\n\u251c\u2500\u2500 postgres_user_username\n\u251c\u2500\u2500 postgres_user_password\n\u251c\u2500\u2500 postgres_user_fullname\n\u2514\u2500\u2500 postgres_user_role\n</code></pre>"},{"location":"configuration/#setting-up-docker-secrets","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f Setting Up Docker Secrets","text":"<p>If running with Docker Compose, JANUX automatically loads secrets from <code>/run/secrets/</code>:</p> <p>\u278a To grant execute permissions, run the following command:</p> <pre><code>chmod +x ./setup_docker_secret.sh\n</code></pre> <p>\u278b Next, to create these secrets, run the following command in the terminal for MongoDB backend:</p> <pre><code>./setup_docker_secret.sh mongo\n</code></pre> <p>or for PostgreSQL backend: </p> <pre><code>./setup_docker_secret.sh postgres\n</code></pre> <p>Prior to the deployment, this script will populate Docker secrets in <code>/run/secrets/</code> by reading from local files.</p>"},{"location":"configuration/#loading-secrets-in-the-application","title":"\ud83d\udd04 Loading Secrets in the Application","text":"<p>JANUX automatically detects whether it is running:</p> Enviroment Secrets Containerized environment (Docker, Kubernetes) From <code>/run/secrets/</code> Local / development From <code>./secrets/</code> As a fallback From environment variables <p>Now that environment variables and secrets are set, continue with installation. \ud83c\udfaf</p>"},{"location":"installation/","title":"\ud83d\udce5 Installation","text":""},{"location":"installation/#pip","title":"\ud83d\udce6 pip","text":"<p>JANUX Authentication Gateway is published as a python package and can be installed with <code>pip</code>, ideally by using a virtual environment. Open up a terminal and install with:</p> Latest1.x <pre><code>pip install janux-auth-gateway\n</code></pre> <pre><code>pip install janux-auth-gateway==\"1.*\" # (1)!\n</code></pre> <ol> <li> <p>JANUX uses semantic versioning.</p> <p>This will make sure that you don't accidentally [upgrade to the next major version], which may include breaking changes that silently corrupt your site. Additionally, you can use <code>pip freeze</code> to create a lockfile, so builds are reproducible at all times:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Now, the lockfile can be used for installation:</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> </ol> <p>This will automatically install compatible versions of all dependencies: fastapi, uvicorn, pymongo, motor and requests. JANUX always strives to support the latest versions, so there's no need to install those packages separately.</p>"},{"location":"installation/#poetry","title":"\ud83c\udfad Poetry","text":"<p>JANUX recommends using Poetry for its outstanding dependency management, use:</p> <pre><code>poetry add janux-auth-gateway\n</code></pre> <p>This command downloads and installs the package and its dependencies and adds the package as a dependency in your <code>pyproject.toml</code>.</p> <p>After installation, you can start using the package in your project. If you need to enter the virtual environment managed by Poetry, run:</p> <pre><code>poetry shell\n</code></pre> <p>Verify the Installation:</p> <pre><code>poetry show janux-auth-gateway\n</code></pre> <p>Updating the Package:</p> <pre><code>poetry update janux-auth-gateway\n</code></pre>"},{"location":"installation/#github","title":"\ud83d\udc19 GitHub","text":"<p>JANUX can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version:</p> <pre><code>git clone https://github.com/fox-techniques/janux-auth-gateway.git\ncd janux-auth-gateway\npip install -e .\n</code></pre>"},{"location":"installation/#docker-swarm-recommeneded","title":"\ud83d\udea2 Docker Swarm (RECOMMENEDED)","text":""},{"location":"installation/#postgresql","title":"\ud83d\udc18 PostgreSQL","text":"<p>Secrets ensure sensitive information (like private keys and database credentials) is securely stored. For multi-container setups including PostgreSQL and Redis: </p> <p>ATTENTION</p> <p>Make sure you have JANUX configured with <code>.env</code>. If not, please go to the section configuration.</p> <p>\u278a Grant permissions</p> <p>First, first make sure permissions are set by running the following command in the terminal:</p> <pre><code>chmod +x ./setup_docker_secret.sh\n</code></pre> <p>\u278b Configure Docker Secrets</p> <p>Next, to create secrets, run the following command in the terminal:</p> <pre><code>./setup_docker_secret.sh postgres\n</code></pre> <p>\u278c Deploy the Stack</p> <p>Run:</p> <pre><code>./deploy_janux_stack.sh docker-compose.postgres.yml\n</code></pre> <p>This will:</p> <ul> <li>Deploy JANUX Authentication Gateway</li> <li>Deploy PostgreSQL and Redis as dependencies</li> <li>Ensure all services are properly networked</li> </ul> <p>\u278e Check If Services Are Running</p> <p>Verify that all services are running with:</p> <pre><code>docker service ls\n</code></pre> <p>\u278f Test the API</p> <p>Once all services are running, check the API health:</p> <pre><code>curl http://localhost:8000/health\n</code></pre> <p>\u2705 Expected Output:</p> <pre><code>{\"status\": \"healthy\"}\n</code></pre> <p>\u2790 Stop &amp; Remove the Stack</p> <p>If you need to stop the application, run:</p> <pre><code>docker stack rm janux-stack\n</code></pre>"},{"location":"installation/#mongodb","title":"\ud83c\udf31 MongoDB","text":"<p>Secrets ensure sensitive information (like private keys and database credentials) is securely stored. For multi-container setups including MongoDB and Redis: </p> <p>ATTENTION</p> <p>Make sure you have JANUX configured with <code>.env</code>. If not, please go to the section configuration.</p> <p>\u278a Grant permissions</p> <p>First, first make sure permissions are set by running the following command in the terminal:</p> <pre><code>chmod +x ./setup_docker_secret.sh\n</code></pre> <p>\u278b Configure Docker Secrets</p> <p>Next, to create secrets, run the following command in the terminal:</p> <pre><code>./setup_docker_secret.sh mongo\n</code></pre> <p>\u278c Deploy the Stack</p> <p>Run:</p> <pre><code>./deploy_janux_stack.sh docker-compose.mongo.yml\n</code></pre> <p>This will:</p> <ul> <li>Deploy JANUX Authentication Gateway</li> <li>Deploy MongoDB and Redis as dependencies</li> <li>Ensure all services are properly networked</li> </ul> <p>\u278e Check If Services Are Running</p> <p>Verify that all services are running with:</p> <pre><code>docker service ls\n</code></pre> <p>\u278f Test the API</p> <p>Once all services are running, check the API health:</p> <pre><code>curl http://localhost:8000/health\n</code></pre> <p>\u2705 Expected Output:</p> <pre><code>{\"status\": \"healthy\"}\n</code></pre> <p>\u2790 Stop &amp; Remove the Stack</p> <p>If you need to stop the application, run:</p> <pre><code>docker stack rm janux-stack\n</code></pre> <p>\ud83e\udd29 CONGRAGULATIONS! Continue to the usage. Let's keep going...\ud83d\ude80</p>"},{"location":"prerequisites/","title":"\u26a1\ufe0f Prerequisites","text":"<p>Before installing JANUX, ensure you have the following dependencies installed:</p> <ul> <li>Python 3.10+</li> <li>pip or Poetry </li> <li>Git</li> <li>Docker</li> <li>MongoDB/PostgreSQL</li> <li>Redis</li> </ul>"},{"location":"prerequisites/#python-310","title":"\ud83d\udc0d Python 3.10+","text":"<p>Ensure you have Python 3.10+ installed. If not, download and install it from the official Python website. Check your version:</p> <p><pre><code>python --version\n</code></pre> For installation guides and troubleshooting, refer to the RealPython documentation.</p>"},{"location":"prerequisites/#package-managers","title":"\ud83d\udce6 Package managers","text":"pipPoetry <p>Knowledge</p> <p>If you don't have prior experience with Python, we recommend reading Using Python's pip to Manage Your Projects' Dependencies, which is a really good introduction on the mechanics of Python package management and helps you troubleshoot if you run into errors.</p> <p>Upgrade pip to the latest version: </p> <pre><code>python -m pip install --upgrade pip\n</code></pre> <p>Install Poetry as package manager and dependencies management:</p> <pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre>"},{"location":"prerequisites/#git","title":"\ud83c\udf31 Git","text":"<p>Ensure you have Git installed. If not, download and install it from the official Git website. Check your version:</p> <pre><code>git --version\n</code></pre>"},{"location":"prerequisites/#docker-docker-compose","title":"\ud83d\udc33 Docker &amp; Docker Compose","text":"<p>To run JANUX Authentication Gateway using Docker, ensure you have Docker and Docker Compose installed. Download and install Docker from the official website:</p> <ul> <li>Docker Engine</li> <li>Docker Compose</li> <li>Docker Desktop</li> </ul> <p>Verify installation with: </p> <pre><code>docker version\n</code></pre> <pre><code>docker compose version\n</code></pre>"},{"location":"prerequisites/#mongodb","title":"\ud83c\udf43 MongoDB","text":"<p>MongoDB is supported for storing user and admin credentials. We highly recommend to run a MongoDB instance in Docker. </p> <p>\u278a Pull MongoDB docker image </p> <p><pre><code>docker pull mongo\n</code></pre> \u278b Run MongoDB in a container</p> MongoDB on DockerPersistent MongoDB on Docker <p>To run a MongoDB instance in a container:</p> <pre><code>docker run -d --name mongodb -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=rootPassw0rd123! mongo\n</code></pre> <p>RECOMMENDED! To persist data beyond container restarts, mount a local volume:</p> <pre><code>docker run -d --name mongodb -p 27017:27017 -v mongodb_data:/data/db -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=rootPassw0rd123! mongo\n</code></pre> <p>\u278c Connect to MongoDB instance </p> <pre><code>mongosh --host localhost --port 27017 -u admin -p secret\n</code></pre> <p>Optionally, you can install MongoDB Compass GUI for MongoDB.</p> <p>\u278d Stop and remove MongoDB</p> <pre><code>docker stop mongodb\ndocker rm mongodb\n</code></pre> <p>For a standalone installation please follow the MongoDB Installation Guide.</p>"},{"location":"prerequisites/#postgresql","title":"\ud83d\udc18 PostgreSQL","text":"<p>PostgreSQL is supported as the backend engine in JANUX as well. It stores user and admin credentials in a secure, relational schema.</p> <p>We recommend running PostgreSQL in a Docker container for development or testing.</p> <p>\u278a Pull PostgreSQL docker image </p> <p><pre><code>docker pull postgres:16\n</code></pre> \u278b Run PostgreSQL in a container</p> PostgreSQL on DockerPersistent PostgreSQL on Docker <p>To run a PostgreSQL instance in a container:</p> <pre><code>docker run -d --name postgres \\\n-e POSTGRES_DB=users_db \\\n-e POSTGRES_USER=admin \\\n-e POSTGRES_PASSWORD=SuperAdminPassw0rd123! \\\n-p 5432:5432 \\\npostgres:16\n</code></pre> <p>RECOMMENDED! To persist data beyond container restarts, mount a local volume:</p> <pre><code>docker run -d --name postgres \\\n  -e POSTGRES_DB=users_db \\\n  -e POSTGRES_USER=super_admin \\\n  -e POSTGRES_PASSWORD=SuperAdminPassw0rd123! \\\n  -v pg_data:/var/lib/postgresql/data \\\n  -p 5432:5432 \\\n  postgres:16\n</code></pre> <p>\u278c Connect to PostgreSQL instance </p> <pre><code>psql -h localhost -U admin -d users_db\n</code></pre> <p>Optionally, you can install PGAdmin</p> <p>\u278d Stop and remove PostgreSQL</p> <pre><code>docker stop postgres\ndocker rm postgres\n</code></pre>"},{"location":"prerequisites/#redis","title":"\ud83d\udd25 Redis","text":"<p>Redis is required for storing user and admin credentials. We highly recommend to run a Redis instance in Docker. </p> <p>\u278a Pull Redis docker image </p> <p><pre><code>docker pull redis\n</code></pre> \u278b Run Redis in a container</p> Redis on DockerPersistent Redis on DockerRedis with Authentication <p>To run a Redis instance in a container:</p> <pre><code>docker run -d --name redis -p 6379:6379 redis\n</code></pre> <p>RECOMMENDED! To persist data beyond container restarts, mount a local volume:</p> <pre><code>docker run -d --name redis -p 6379:6379 -v redis_data:/data redis --save 60 1 --loglevel warning\n</code></pre> <p>RECOMMENDED! By default, Redis runs without a password. To add one:</p> <pre><code>docker run -d --name redis -p 6379:6379 redis --requirepass \"redisPassw0rd123!\"\n</code></pre> <p>\u278c Connect to Redis instance </p> <pre><code>docker exec -it redis redis-cli\n</code></pre> <p>\u278d Stop and remove Redis</p> <pre><code>docker stop redis\ndocker rm redis\n</code></pre> <p>For a standalone installation please follow the Redis Installation Guide.</p> <p>Now that prerequisites are set, continue with configuration. \ud83c\udfaf</p>"},{"location":"usage/","title":"\ud83d\ude80 Usage Guide","text":"<p>This guide walks you through using the JANUX Authentication Gateway, to authenticate users and managing JWT tokens.</p> <p>Once running, the API is available at:</p> <pre><code>http://localhost:8000\n</code></pre> <p>Check if the service is live:</p> <pre><code>curl http://localhost:8000/health\n</code></pre> <p>Expected response: <pre><code>{\"status\": \"ok\"}\n</code></pre></p>"},{"location":"usage/#authenticating-users","title":"\ud83d\udd11 Authenticating Users","text":"<p>\u278a Register a New User</p> <p>To register a new user, send a POST request to /users/register:</p> <pre><code>curl -X POST http://localhost:8000/users/register \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"email\": \"test.user@example.com\",\n           \"full_name\": \"Test User\",\n           \"password\": \"Passw0rd123!\"\n         }'\n</code></pre> <p>Expected response:</p> <pre><code>{\n  \"id\": \"507f1f77bcf86cd799439011\",\n  \"email\": \"test.user@example.com\",\n  \"full_name\": \"Test User\"\n}\n</code></pre> <p>\u278b Logging In</p> <p>To authenticate, send user credentials to /auth/login:</p> <pre><code>curl -X POST http://localhost:8000/auth/login \\\n     -H \"Content-Type: application/x-www-form-urlencoded\" \\\n     -d \"username=test.user@example.com&amp;password=Passw0rd123!\"\n</code></pre> <p>Successful login response:</p> <pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"bearer\"\n}\n</code></pre>"},{"location":"usage/#using-jwt-tokens","title":"\ud83d\udd10 Using JWT Tokens","text":"<p>Once logged in, use the access token for authentication in API requests. Example of calling a protected route:</p> <pre><code>curl -X GET http://localhost:8000/protected-endpoint \\\n     -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\"\n</code></pre>"},{"location":"usage/#managing-admin-accounts","title":"\ud83c\udfab Managing Admin Accounts","text":"<p>\u278a Create a Super Admin (First-Time Setup)</p> <p>To create a super admin account:</p> <pre><code>curl -X POST http://localhost:8000/admins/create \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"email\": \"admin@example.com\",\n           \"full_name\": \"Admin User\",\n           \"password\": \"SecureAdminPass123!\",\n           \"role\": \"super_admin\"\n         }'\n</code></pre> <p>\u278b Logging in as an Admin</p> <p>Use the same login endpoint /auth/login but with admin credentials.</p> <pre><code>curl -X POST http://localhost:8000/auth/login \\\n     -H \"Content-Type: application/x-www-form-urlencoded\" \\\n     -d \"username=admin@example.com&amp;password=SecureAdminPass123!\"\n</code></pre>"},{"location":"usage/#refreshing-jwt-tokens","title":"\ud83d\udd04 Refreshing JWT Tokens","text":"<p>If enabled, a refresh token can be used to get a new access token.</p> <pre><code>curl -X POST http://localhost:8000/auth/refresh \\\n     -H \"Authorization: Bearer YOUR_REFRESH_TOKEN\"\n</code></pre>"},{"location":"usage/#revoking-tokens-logout","title":"\ud83d\udcdb Revoking Tokens (Logout)","text":"<p>To invalidate a token and log out:</p> <pre><code>curl -X POST http://localhost:8000/auth/logout \\\n     -H \"Authorization: Bearer YOUR_ACCESS_TOKEN\"\n</code></pre>"},{"location":"usage/#api-documentation","title":"\ud83d\udcc2 API Documentation","text":"<p>Interactive API documentation is available at:</p> <ul> <li>Swagger UI</li> <li>Redoc UI</li> </ul>"}]}